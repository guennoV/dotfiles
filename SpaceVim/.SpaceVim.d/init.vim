" Dark powered mode of SpaceVim, generated by SpaceVim automatically. {{{1
let g:spacevim_enable_debug = 1
let g:spacevim_realtime_leader_guide = 1
call SpaceVim#layers#load('ui')
call SpaceVim#layers#load('incsearch')
call SpaceVim#layers#load('exprfold')
call SpaceVim#layers#load('indentmove')
call SpaceVim#layers#load('lang#c')
call SpaceVim#layers#load('lang#java')
call SpaceVim#layers#load('lang#javascript')
call SpaceVim#layers#load('lang#lua')
call SpaceVim#layers#load('lang#perl')
call SpaceVim#layers#load('lang#python')
call SpaceVim#layers#load('lang#rust')
call SpaceVim#layers#load('lang#tmux')
call SpaceVim#layers#load('lang#vim')
call SpaceVim#layers#load('shell')   
call SpaceVim#layers#load('tools#screensaver')
let g:spacevim_enable_vimfiler_welcome = 1
let g:spacevim_enable_debug = 1
let g:deoplete#auto_complete_delay = 150
let g:spacevim_enable_tabline_filetype_icon = 1
let g:spacevim_enable_os_fileformat_icon = 1
let g:spacevim_buffer_index_type = 1
let g:neomake_vim_enabled_makers = ['vimlint', 'vint']
if has('python3')
    let g:ctrlp_map = ''
    nnoremap <silent> <C-p> :Denite file_rec<CR>
endif
let g:clang2_placeholder_next = ''
let g:clang2_placeholder_prev = ''

" 1}}}

" Here are some basic customizations, please refer to the ~/.SpaceVim.d/init.vim {{{1
" file for all possible options:
let g:spacevim_default_indent = 4
let g:spacevim_max_column     = 80

" Change the default directory where all miscellaneous persistent files go.
" By default it is ~/.cache/vimfiles/.
let g:spacevim_plugin_bundle_dir = '~/.cache/vimfiles/'

" Set plugin manager, you want to use, default is dein.vim
let g:spacevim_plugin_manager = 'dein'  " neobundle or dein or vim-plug

" 1}}}

" Config {{{1

" We already use custom status line
set noshowmode

" Allow virtual editing in Visual block mode
set virtualedit=block

" cpp setting {{{2

" iN    Indent C++ base class declarations and constructor initializations, if they start in a new line (otherwise they are aligned at the right side of the ':').
set cino=i-s

":N    Place case labels N characters from the indent of the switch().
set cino+=:0

" gN    Place C++ scope declarations N characters from the indent of the block they are in.
set cino+=g0

" mN    When N is non-zero, line up a line starting with a closing parentheses with the first character of the line with the matching opening parentheses.
set cino+=(s,m1

set cino+=(0
" jN    Better support for anonymous classes / functions
set cino+=j1
" JN    Better support for object declarations (bracket initialisation,
" JavaScript object, ...)
set cino+=J1

" 2}}}

" Add custom plugins

" gilligan/vim-lldb                     : lldb debugger integration
" myusuf3/numbers.vim                   : toggle intelligently line numbers
" plasticboy/vim-markdown               : markdown syntax plugin
" blueyed/vim-diminactive               : better display for focused / unfocused buffer
" dodie/vim-disapprove-deep-indentation : this plugin disapproves deeply indented code
" ConradIrwin/vim-bracketed-paste       : handles bracketed-paste-mode in vim (aka. automatic `:set paste`)

let g:spacevim_custom_plugins = [
 \ ['gilligan/vim-lldb'],
 \ ['myusuf3/numbers.vim', {'hook_add' : "let g:numbers_exclude = ['unite', 'tagbar', 'startify', 'gundo', 'vimshell', 'w3m', 'nerdtree', 'terminal']"}],
 \ ['plasticboy/vim-markdown', {'on_ft' : 'markdown'}],
 \ ['vim-scripts/a.vim', {'on_ft' : 'cpp'}],
 \ ['kien/rainbow_parentheses.vim'],
 \ ['chaoren/vim-wordmotion'],
 \ ['rliang/termedit.nvim'],
 \ ['vhdirk/vim-cmake'],
 \ ['blueyed/vim-diminactive'],
 \ ['dodie/vim-disapprove-deep-indentation'],
 \ ['ConradIrwin/vim-bracketed-paste'],
 \ ['kristijanhusak/vim-hybrid-material']
 \ ]

" Neomake {{{2

let g:neomake_cpp_enabled_makers = ['embedded']
let g:neomake_cpp_embedded_maker = {
    \ 'exe': 'build-dev',
    \ 'args': '',
    \ 'append_file': 0,
    \ 'errorformat': '%f:%l:%c %m'
    \ }
 
" !Neomake 2}}}

" Numbers {{{2

" Disable by default, for comfort
let g:enable_numbers = 0

" Disable number column by default
set nonumber norelativenumber


" !Numbers 2}}}

" signify {{{2

" Disable it by default, can be enable using 'SignifyToggle'
let g:signify_disable_by_default = 0

" !signify 2}}}

" Terminal config
" ---------------

" The plugin 'numbers.vim' will not be activated on the terminal filetype thus
" we set this value when opening a terminal buffer.
autocmd TermOpen term://* setl filetype=terminal

" 1}}}
